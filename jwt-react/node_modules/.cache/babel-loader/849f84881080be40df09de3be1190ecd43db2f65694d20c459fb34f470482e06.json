{"ast":null,"code":"var _jsxFileName = \"F:\\\\JWT.Node\\\\jwt-react\\\\src\\\\pages\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Table, Row, Col } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [users, setUsers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/users\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`  // Corrected the token syntax here\r\n          }\r\n        });\r\n        const result = await response.json();\r\n\r\n        // Check if the response is an array\r\n        if (Array.isArray(result)) {\r\n          setUsers(result);\r\n        } else {\r\n          console.error(\"Expected an array of users, but got:\", result);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error fetching users:\", error);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchUsers();\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"text-center\">Dashboard</h1>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* Check if users is an array and has elements }\r\n              {Array.isArray(users) && users.length > 0 ? (\r\n                users.map((user) => (\r\n                  <tr key={user._id}>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.email}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"2\">No users found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;*/\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Table, Row, Col, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const token = localStorage.getItem(\"token\");\n  const [users, setUsers] = useState([]);\n  const [userName, setUserName] = useState('');\n  const [userRole, setUserRole] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      if (token) {\n        try {\n          // Decode the token to get user info (you should use a library like jwt-decode for this)\n          const decodedToken = JSON.parse(atob(token.split('.')[1]));\n          setUserName(decodedToken.name);\n          setUserRole(decodedToken.role);\n\n          // Fetch users if the user is admin\n          if (decodedToken.role === 'admin') {\n            const response = await fetch(\"http://localhost:5000/api/users\", {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            const result = await response.json();\n            setUsers(result);\n          }\n        } catch (error) {\n          console.error(\"Error decoding token or fetching user data:\", error);\n        }\n      } else {\n        navigate(\"/login\");\n      }\n    };\n    fetchUserData();\n  }, [token, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: userRole === 'admin' ? 'Admin Dashboard' : `Welcome, ${userName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), userRole === 'admin' ? /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Array.isArray(users) && users.length > 0 ? users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 23\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"2\",\n                children: \"No users found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // If not an admin, show a welcome message\n        _jsxDEV(Alert, {\n          variant: \"success\",\n          children: \"You are logged in as a regular user. Enjoy browsing!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"/h1sJKuSlRxnrzZDkteUCE7UjtE=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Table","Row","Col","Alert","jsxDEV","_jsxDEV","Dashboard","_s","token","localStorage","getItem","users","setUsers","userName","setUserName","userRole","setUserRole","navigate","fetchUserData","decodedToken","JSON","parse","atob","split","name","role","response","fetch","headers","Authorization","result","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","Array","isArray","length","map","user","email","_id","colSpan","variant","_c","$RefreshReg$"],"sources":["F:/JWT.Node/jwt-react/src/pages/dashboard/Dashboard.js"],"sourcesContent":["/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Table, Row, Col } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [users, setUsers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/users\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`  // Corrected the token syntax here\r\n          }\r\n        });\r\n        const result = await response.json();\r\n\r\n        // Check if the response is an array\r\n        if (Array.isArray(result)) {\r\n          setUsers(result);\r\n        } else {\r\n          console.error(\"Expected an array of users, but got:\", result);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error fetching users:\", error);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchUsers();\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"text-center\">Dashboard</h1>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* Check if users is an array and has elements }\r\n              {Array.isArray(users) && users.length > 0 ? (\r\n                users.map((user) => (\r\n                  <tr key={user._id}>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.email}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"2\">No users found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Table, Row, Col, Alert } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [users, setUsers] = useState([]);\r\n  const [userName, setUserName] = useState('');\r\n  const [userRole, setUserRole] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      if (token) {\r\n        try {\r\n          // Decode the token to get user info (you should use a library like jwt-decode for this)\r\n          const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n          setUserName(decodedToken.name);\r\n          setUserRole(decodedToken.role);\r\n\r\n          // Fetch users if the user is admin\r\n          if (decodedToken.role === 'admin') {\r\n            const response = await fetch(\"http://localhost:5000/api/users\", {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`\r\n              }\r\n            });\r\n            const result = await response.json();\r\n            setUsers(result);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error decoding token or fetching user data:\", error);\r\n        }\r\n      } else {\r\n        navigate(\"/login\");\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [token, navigate]);\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"text-center\">\r\n            {userRole === 'admin' ? 'Admin Dashboard' : `Welcome, ${userName}`}\r\n          </h1>\r\n\r\n          {/* Display the users table if the user is an admin */}\r\n          {userRole === 'admin' ? (\r\n            <Table striped bordered hover responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Array.isArray(users) && users.length > 0 ? (\r\n                  users.map((user) => (\r\n                    <tr key={user._id}>\r\n                      <td>{user.name}</td>\r\n                      <td>{user.email}</td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"2\">No users found</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          ) : (\r\n            // If not an admin, show a welcome message\r\n            <Alert variant=\"success\">\r\n              You are logged in as a regular user. Enjoy browsing!\r\n            </Alert>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}