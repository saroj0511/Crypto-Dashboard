{"ast":null,"code":"var _jsxFileName = \"F:\\\\JWT.Node\\\\jwt-react\\\\src\\\\pages\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n/*import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Table, Row, Col } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [users, setUsers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/users\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`  // Corrected the token syntax here\r\n          }\r\n        });\r\n        const result = await response.json();\r\n        setUsers(result);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (token) {\r\n      fetchUsers();\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"text-center\">Dashboard</h1>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;*/\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Table, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const token = localStorage.getItem(\"token\");\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/users\", {\n          headers: {\n            Authorization: `Bearer ${token}` // Corrected the token syntax here\n          }\n        });\n        const result = await response.json();\n\n        // Check if the response is an array\n        if (Array.isArray(result)) {\n          setUsers(result);\n        } else {\n          console.error(\"Expected an array of users, but got:\", result);\n        }\n      } catch (error) {\n        console.log(\"Error fetching users:\", error);\n      }\n    };\n    if (token) {\n      fetchUsers();\n    } else {\n      navigate(\"/login\");\n    }\n  }, [token, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Array.isArray(users) && users.length > 0 ? users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"2\",\n                children: \"No users found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"9AXLFfADf4/BMmlogoS/qREIwcc=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Table","Row","Col","jsxDEV","_jsxDEV","Dashboard","_s","token","localStorage","getItem","users","setUsers","navigate","fetchUsers","response","fetch","headers","Authorization","result","json","Array","isArray","console","error","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","length","map","user","name","email","_id","colSpan","_c","$RefreshReg$"],"sources":["F:/JWT.Node/jwt-react/src/pages/dashboard/Dashboard.js"],"sourcesContent":["/*import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Table, Row, Col } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [users, setUsers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/users\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`  // Corrected the token syntax here\r\n          }\r\n        });\r\n        const result = await response.json();\r\n        setUsers(result);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (token) {\r\n      fetchUsers();\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"text-center\">Dashboard</h1>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Table, Row, Col } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [users, setUsers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/users\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`  // Corrected the token syntax here\r\n          }\r\n        });\r\n        const result = await response.json();\r\n\r\n        // Check if the response is an array\r\n        if (Array.isArray(result)) {\r\n          setUsers(result);\r\n        } else {\r\n          console.error(\"Expected an array of users, but got:\", result);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error fetching users:\", error);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchUsers();\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"text-center\">Dashboard</h1>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* Check if users is an array and has elements */}\r\n              {Array.isArray(users) && users.length > 0 ? (\r\n                users.map((user) => (\r\n                  <tr key={user._id}>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.email}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"2\">No users found</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}