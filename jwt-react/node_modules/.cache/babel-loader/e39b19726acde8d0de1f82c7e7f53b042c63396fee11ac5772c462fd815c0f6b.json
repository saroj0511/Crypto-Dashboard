{"ast":null,"code":"var _jsxFileName = \"F:\\\\JWT.Node\\\\jwt-react\\\\src\\\\pages\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n/*import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Table, Row, Col } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [users, setUsers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/users\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`  // Corrected the token syntax here\r\n          }\r\n        });\r\n        const result = await response.json();\r\n        setUsers(result);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (token) {\r\n      fetchUsers();\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"text-center\">Dashboard</h1>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;*/\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Table, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const token = localStorage.getItem(\"token\");\n  const [users, setUsers] = useState([]);\n  const [userRole, setUserRole] = useState(null); // State for user role\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!token) {\n        navigate(\"/login\"); // Redirect to login if no token\n        return;\n      }\n      try {\n        // Fetch user data (including role) from /api/users/me\n        const response = await fetch(\"http://localhost:5000/api/users/me\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const result = await response.json();\n        if (response.ok) {\n          setUserRole(result.role); // Set the role (admin or user)\n        } else {\n          console.error(\"Error fetching user data:\", result.message);\n          navigate(\"/login\"); // Redirect to login if error\n        }\n\n        // If user is admin, fetch the list of all users\n        if (result.role === \"admin\") {\n          const usersResponse = await fetch(\"http://localhost:5000/api/users\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          const usersResult = await usersResponse.json();\n          setUsers(usersResult); // Set users list for admins\n        }\n      } catch (error) {\n        console.error(\"Error during data fetching:\", error);\n        navigate(\"/login\"); // Redirect to login in case of error\n      }\n    };\n    fetchData(); // Fetch data when component mounts\n  }, [token, navigate]); // Re-run when token or navigate changes\n\n  if (!userRole) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this); // Show loading message while fetching user data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: userRole === \"admin\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Admin Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Array.isArray(users) && users.length > 0 ? users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 25\n                }, this)]\n              }, user._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"2\",\n                  children: \"No users found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: [\"Welcome, \", userRole === \"user\" ? \"User\" : \"Guest\", \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"bMWOduRdVrk2xwvHj33/CBf1BKc=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Table","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","token","localStorage","getItem","users","setUsers","userRole","setUserRole","navigate","fetchData","response","fetch","headers","Authorization","result","json","ok","role","console","error","message","usersResponse","usersResult","children","fileName","_jsxFileName","lineNumber","columnNumber","className","striped","bordered","hover","responsive","Array","isArray","length","map","user","name","email","_id","colSpan","_c","$RefreshReg$"],"sources":["F:/JWT.Node/jwt-react/src/pages/dashboard/Dashboard.js"],"sourcesContent":["/*import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Table, Row, Col } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [users, setUsers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/users\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`  // Corrected the token syntax here\r\n          }\r\n        });\r\n        const result = await response.json();\r\n        setUsers(result);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (token) {\r\n      fetchUsers();\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"text-center\">Dashboard</h1>\r\n          <Table striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Table, Row, Col } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [users, setUsers] = useState([]);\r\n  const [userRole, setUserRole] = useState(null); // State for user role\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!token) {\r\n        navigate(\"/login\"); // Redirect to login if no token\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Fetch user data (including role) from /api/users/me\r\n        const response = await fetch(\"http://localhost:5000/api/users/me\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n          setUserRole(result.role); // Set the role (admin or user)\r\n        } else {\r\n          console.error(\"Error fetching user data:\", result.message);\r\n          navigate(\"/login\"); // Redirect to login if error\r\n        }\r\n\r\n        // If user is admin, fetch the list of all users\r\n        if (result.role === \"admin\") {\r\n          const usersResponse = await fetch(\"http://localhost:5000/api/users\", {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          const usersResult = await usersResponse.json();\r\n          setUsers(usersResult); // Set users list for admins\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error during data fetching:\", error);\r\n        navigate(\"/login\"); // Redirect to login in case of error\r\n      }\r\n    };\r\n\r\n    fetchData(); // Fetch data when component mounts\r\n  }, [token, navigate]); // Re-run when token or navigate changes\r\n\r\n  if (!userRole) {\r\n    return <div>Loading...</div>; // Show loading message while fetching user data\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          {userRole === \"admin\" ? (\r\n            <>\r\n              <h1 className=\"text-center\">Admin Dashboard</h1>\r\n              <Table striped bordered hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Array.isArray(users) && users.length > 0 ? (\r\n                    users.map((user) => (\r\n                      <tr key={user._id}>\r\n                        <td>{user.name}</td>\r\n                        <td>{user.email}</td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"2\">No users found</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </>\r\n          ) : (\r\n            <h1 className=\"text-center\">Welcome, {userRole === \"user\" ? \"User\" : \"Guest\"}!</h1>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}